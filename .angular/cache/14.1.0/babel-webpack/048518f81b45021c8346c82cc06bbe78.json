{"ast":null,"code":"import _asyncToGenerator from \"/Users/awaadchaudhry/Desktop/Coding/Projects/dovShop/dovShop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./tab3.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./tab3.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { ServeService } from '../serve.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nlet Tab3Page = class Tab3Page {\n  constructor(storage, serve, loadingCtrl, alertController, http) {\n    this.storage = storage;\n    this.serve = serve;\n    this.loadingCtrl = loadingCtrl;\n    this.alertController = alertController;\n    this.http = http;\n    this.clist = [];\n    this.flist = [];\n    this.imgList = [];\n    this.toplist = [];\n    this.tempa = [];\n    this.tempa2 = [];\n    this.arr = [];\n    this.urlList = [];\n  }\n\n  ngOnInit() {\n    return _asyncToGenerator(function* () {})();\n  }\n\n  getData() {\n    this.storage.get('url').then(res => {\n      this.urlList = res; // console.log(this.urlList);\n    });\n    this.storage.get('source').then(res => {\n      this.alist = res;\n\n      if (!this.alist) {} else {\n        for (let i = 0; i < this.alist.length; i++) {\n          this.clist.push(this.alist[i]);\n          this.imgList.push(this.clist[i].image);\n          this.toplist.push(this.clist[i].changelog[1]);\n          this.flist.push(this.clist[i].changelog[0]);\n        }\n\n        for (let i = 0; i < this.clist.length; i++) {\n          for (let j = 2; j < this.clist[i].changelog.length; j++) {\n            this.flist.push(this.clist[i].changelog[j]); //console.log(this.imgList);\n          }\n\n          for (let i = 0; i < this.clist.length; i++) {\n            for (let j = 2; j < this.clist[i].changelog.length; j++) this.imgList.push(this.clist[i].changelog[0]);\n          }\n        }\n      }\n    });\n  }\n\n  ionViewDidEnter() {\n    this.getData();\n  }\n\n  ionViewDidLeave() {\n    this.alist = [];\n    this.clist = [];\n    this.imgList = [];\n    this.toplist = [];\n    this.flist = [];\n  }\n\n  isEmpty() {\n    return this.flist.length == 0;\n  }\n\n  refresh() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const loading = yield _this.loadingCtrl.create({\n        message: 'Updating Sources',\n        duration: 1000,\n        spinner: 'circles'\n      });\n      loading.present();\n      setTimeout(() => {\n        _this.doRefresh(); // console.log(this.urlList);\n\n\n        _this.doneRefresh();\n      }, 1500);\n    })();\n  }\n\n  doRefresh() {\n    //TODO: MAKE doRefresh()  SO DATA IS RETRIEVED FROM URL(S) AGAIN\n    //      IN ORDER TO INPLEMENT REALTIME SOURCE REFRESH\n    this.storage.remove('source'); //window.location.reload();\n\n    console.log(this.urlList);\n    this.alist = [];\n    this.clist = [];\n    this.imgList = [];\n    this.toplist = [];\n    this.flist = [];\n    this.arr = [];\n\n    for (let i = 0; i < this.urlList.length; i++) {\n      this.serve.getSourceData(this.urlList[i]).subscribe(data => {\n        this.clist = data['sources'];\n        console.log(this.clist);\n        const item = this.clist[0];\n        this.arr.push(item);\n        console.log(this.arr);\n        this.storage.set('source', this.arr);\n      });\n    }\n\n    setTimeout(() => {\n      this.getData();\n    }, 1000);\n  }\n\n  doneRefresh() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const alert = yield _this2.alertController.create({\n        subHeader: 'Sources have been updated',\n        buttons: [{\n          text: 'Ok',\n          handler: () => {\n            console.log('Confirm Ok');\n          }\n        }]\n      });\n      yield alert.present();\n    })();\n  }\n\n};\n\nTab3Page.ctorParameters = () => [{\n  type: Storage\n}, {\n  type: ServeService\n}, {\n  type: LoadingController\n}, {\n  type: AlertController\n}, {\n  type: HttpClient\n}];\n\nTab3Page = __decorate([Component({\n  selector: 'app-tab3',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], Tab3Page);\nexport { Tab3Page };","map":{"version":3,"mappings":"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","names":["Component","Storage","ServeService","LoadingController","AlertController","HttpClient","Tab3Page","constructor","storage","serve","loadingCtrl","alertController","http","ngOnInit","getData","get","then","res","urlList","alist","i","length","clist","push","imgList","image","toplist","changelog","flist","j","ionViewDidEnter","ionViewDidLeave","isEmpty","refresh","loading","create","message","duration","spinner","present","setTimeout","doRefresh","doneRefresh","remove","console","log","arr","getSourceData","subscribe","data","item","set","alert","subHeader","buttons","text","handler","selector","template"],"sourceRoot":"","sources":["/Users/awaadchaudhry/Desktop/Coding/Projects/dovShop/dovShop/src/app/tab3/tab3.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { StorageItem } from '../shared/storage-item';\nimport { ServeService } from '../serve.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { Tab2Page } from '../tab2/tab2.page';\nimport { OverlayEventDetail } from '@ionic/core/components';\n\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {\n  alist: StorageItem[];\n  clist: StorageItem[] = [];\n  flist: string[] = [];\n  imgList: string[] = [];\n  toplist: string[] = [];\n  tempa: StorageItem[] = [];\n  tempa2: string[] = [];\n  arr: StorageItem[] = [];\n  image: string;\n  name: \"image\";\n  urlList: string[] = [];\n  constructor(private storage: Storage, \n   private serve: ServeService, \n    private loadingCtrl:LoadingController, \n    private alertController:AlertController,\n    private http:HttpClient) {}\n\n  async ngOnInit() {}\n\n  getData() {\n    this.storage.get('url').then(res => {\n      this.urlList = res;\n      // console.log(this.urlList);\n    });\n    this.storage.get('source').then(res => {\n      this.alist = res;\n      if(!this.alist) {\n\n      } else {\n          for(let i = 0; i<this.alist.length; i++) {\n            this.clist.push(this.alist[i]);\n            this.imgList.push(this.clist[i].image);\n            this.toplist.push(this.clist[i].changelog[1]);\n            this.flist.push(this.clist[i].changelog[0]);\n          }\n          for(let i = 0; i<this.clist.length; i++) {\n            for(let j = 2; j<this.clist[i].changelog.length; j++) {\n              this.flist.push(this.clist[i].changelog[j]);\n              //console.log(this.imgList);\n            }\n          for(let i = 0; i<this.clist.length; i++) {\n            for(let j = 2; j<this.clist[i].changelog.length; j++)\n              this.imgList.push(this.clist[i].changelog[0]);        \n          }\n        }\n      }\n    })\n  }\n\n ionViewDidEnter() {\n  this.getData();\n }\n ionViewDidLeave() {\n    this.alist = [];\n    this.clist = [];\n    this.imgList = [];\n    this.toplist = [];\n    this.flist = [];\n }\n\n  isEmpty() {\n    return this.flist.length == 0;\n  }\n\n  async refresh() {\n    const loading = await this.loadingCtrl.create({\n      message: 'Updating Sources',\n      duration: 1000,\n      spinner: 'circles'\n    })\n    loading.present();\n    setTimeout(() => {\n      this.doRefresh();\n      // console.log(this.urlList);\n      this.doneRefresh();\n    }, 1500)\n  }\n\n  doRefresh() {\n    //TODO: MAKE doRefresh()  SO DATA IS RETRIEVED FROM URL(S) AGAIN\n    //      IN ORDER TO INPLEMENT REALTIME SOURCE REFRESH\n    this.storage.remove('source');\n    //window.location.reload();\n    console.log(this.urlList);\n\n    this.alist = [];\n    this.clist = [];\n    this.imgList = [];\n    this.toplist = [];\n    this.flist = [];\n    this.arr = [];\n    for(let i = 0; i<this.urlList.length; i++) {\n      this.serve.getSourceData(this.urlList[i]).subscribe(data => {\n        this.clist = data['sources'];\n        console.log(this.clist);\n        const item = <StorageItem>this.clist[0];\n        this.arr.push(item);\n        console.log(this.arr);\n        this.storage.set('source', this.arr);\n      })\n    }\n\n    setTimeout(() => {\n          this.getData();\n        }, 1000)\n\n\n  }\n\n  async doneRefresh() {\n    const alert = await this.alertController.create({\n      subHeader: 'Sources have been updated',\n      buttons: [{\n            text: 'Ok',\n            handler: () => {\n                console.log('Confirm Ok');\n            }\n        }]\n    });\n\n    await alert.present();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}